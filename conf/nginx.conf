worker_processes  1;
daemon off;
events {
    worker_connections 1024;
}

error_log /dev/stdout notice;
http {
    init_by_lua_file 'src/init-phase.lua';
    init_worker_by_lua_file 'src/init-worker-phase.lua';
    server {
        access_log /dev/stdout;
        listen 8080;
        
        # ssl_certificate_by_lua_file 'src/ssl-certificate-phase.lua';
        # ssl_certificate phases can only be executed when the Nginx server uses a TLS configuration
        location / {
            lua_code_cache off; #lua code cache off means we can change the lua files without having to reload Nginx
            set_by_lua_file $foo 'src/set-phase.lua';
            rewrite_by_lua_file 'src/rewrite-phase.lua';
            access_by_lua_file 'src/access-phase.lua';
            content_by_lua_file 'src/content-phase.lua';
            header_filter_by_lua_file 'src/header-filter-phase.lua';
            body_filter_by_lua_file 'src/body-filter-phase.lua';
            log_by_lua_file 'src/log-phase.lua';
        }
    }

    upstream foo {
        server 127.0.0.1;
        balancer_by_lua_file 'src/balancer-phase.lua'; # Since we do not proxy to the upstream this phase is not executed
    }
}